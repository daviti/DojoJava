 Intro I:

1
2

 Intro II:

1
3
5
infinite loop!

 Intro III:

1
1


 Intro IV:

1
2
3
4
5
6
7
8
9
"done!"

1. What would happen if you changed line 4 to say SET x to be x+2?
1
3
5
7
9
"done!"

2. How would you change these programs so that it would print all the EVEN numbers?
set x to be 0
if x is < 10 do {
print x
set x to be x+2
go to line 2 }
print "done!"

3. What would happen if you changed 2 to say 255 instead of 10?
will print all the numbers from 1 until 254, then print "done!"


Intro V
"done!"


Intro VI
[1, 5]



 Intro VII
[3, 10]


 Intro VIII
[5, 2, 77]

 Intro IX
It will never print anything because there is infinite loop.
Infinite loop!

 
 Intro X
It will never print anything because there is infinite loop.

If we wanted to fix the infinite loop, we could:

ad another instruction to the if-statement:
Set num to be num + 1

We could add anything to num, as long as we have 'num + something'

Where do we want to add this instruction?
After Line 4, before the curly braces.


 Intro XI
[2, 3, 5, 8, 13, 21, 34, 55, 89, 144 ... ] until we have 100 values


 Intro XII
Infinite loop! It will always take x[0], double it, and store it back in x[0].

How would you modify the program so that the program doubles the value of each number in the array?
Put this after line 4:
SET index to be 1 + index

If we have this:
[ ]*2


Intro XIII





Basic I   
Print 1-255

set x to be 1
print x
if x is < 256
set x to be x + 1
go to line 2


Basic II 
Print odd numbers between 1-255

set n to be 1             n | 1
if n is < 256				| 3		
print n                     | 5 ...... 
set n to be n + 2
go to line 2                1, 3, 5, 7..... 255 


BASIC III
Print Sum 0 - 255

Set d to be 0          d | 0
set x to be 0          X | 0
if d s < 256
print d to be d+1      0 | 0
set x to be d + x      1 | 1
go to line 3           2 | 3
                       3 | 6 ...... 255



Basic IV
Find Max

set x to be [-3, -5, -7]              x | [-3, -5, -7]
set max to be x [0]                 max | -3
set counter to be 0             counter | 0
if (x[couner]) is < 1
if max < x[couner]                     max = -3
 set counter to be counter + 1
go to line 4
print max 


Basic V
Sum of values in the array

set y to be [4, 11, 8]
set sum to be 0
if IS_SET (y [counter]) = 1
set sum to be sum + y[counter]
set counter to be counter + 1
go to line 4
print sum 


Basic VI
Get Average

set array to be [2, 4, 9]
set counter to be 0
set sum to be 0
if Is_SET the array conter to be = 1
if number (array[counter]) = 1
set sum to be (array[counter])
set counter to be counter + 1
go to line 3

 Basic VII
 Array with Odd Numbers
 Write a program that creates an array 'Y' that contains all the odd numbers between 1 to 255. When the program is done, 'y' should have the value of [1, 3, 5, 7, ... 255].

 set y to be 1                    y | 1
 if y is < 256                      | 3
 print y                            | 5
 set y to be y + 2                  | 7
 go to line 2     
 								1, 3, 5, 7

Basic VIII
Greater Than y
Write a program that takes an array and returns the number of values in that array whose value is greater than y. For example if array = [1,3, 5, 7] and y = 3, after your program is run it will print 2 (since there are two values in the array whose value is greater than 3).

set array to be  [ 1, 3, 5, 7]
set y to be 3
set counter to be 0
set < y to be 0
	if IS_SET (array[counter]) = 1
	if array [counter] > y to be > y + 1
set counter to be counter + 1
go to line 5
print greater than y







